#version 450
#extension GL_EXT_samplerless_texture_functions : require

#define RASTERIZER_LOAD_PIXEL
#include "Common.glsl"

layout(local_size_x = BACKWARD_COPY_DIM_X, local_size_y = BACKWARD_COPY_DIM_Y, local_size_z = 1) in;

layout(binding = TEX_PIXELS_TS_BINDING) uniform texture2D gPixels_Ts;
layout(DL_DPIXEL_FORMAT_IDENTIFIER, binding = SIMG_DL_DPIXELS_BINDING) uniform writeonly image2D gDL_DPixels;

void main() {
	uvec2 pixelCoord = gl_GlobalInvocationID.xy;

	if (!validPixelCoord(pixelCoord))
		return;
	vec3 dL_dPixel = loadPixel(pixelCoord);
	vec4 pixel_T = texelFetch(gPixels_Ts, ivec2(pixelCoord), 0);
	imageStore(gDL_DPixels, ivec2(pixelCoord), vec4(dot(dL_dPixel, pixel_T.xyz), dL_dPixel));
}
